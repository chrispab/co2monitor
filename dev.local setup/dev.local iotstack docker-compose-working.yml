version: '3.6'
services:

  portainer-ce:
    container_name: portainer-ce
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9002:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer-ce/data:/data
      
      
# version: "3"

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
# services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    environment:
      TZ: 'Europe/London'
      WEBPASSWORD: 'mypihole'
    # Volumes store your data between container upgrades
    volumes:
      - './volumes/pihole/etc-pihole/:/etc/pihole/'
      - './volumes/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
      



  tvheadend:
    image: ghcr.io/linuxserver/tvheadend
    container_name: tvheadend
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
     # - RUN_OPTS=<run options here> #optional
    volumes:
      - ./volumes/tvheadend/data/config:/config
      #- ./volumes/tvheadend/data/recordings:/recordings
      - /mnt/sata_unique1/tvh_recordings:/recordings
    ports:
      - 9981:9981
      - 9982:9982
    devices:
     # - /dev/dri:/dev/dri #optional
      - /dev/dvb:/dev/dvb #optional
    restart: unless-stopped
    #network_mode: host





  nginx:
    image: nginx
    volumes:
      - ./volumes/co2monitor/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/co2monitor/nginx/html:/usr/share/nginx/html:ro
      #ensure file structure and files are created/added before upping these containers
    ports:
      - 8080:80
    depends_on:
      - php
    links:
        - php

  # PHP Service
  php:
    image: php:8.0-fpm
    build: ./volumes/co2monitor/php/build # ensure Dockerfile for php build is in this dir
    working_dir: /usr/share/nginx/html #php internal container working dir - same as html folder 
    volumes:
      - ./volumes/co2monitor/nginx/html:/usr/share/nginx/html
      - ./volumes/co2monitor/php/logs/php-error.log:/var/log/error.log
      - ./volumes/co2monitor/php/settings/phpSettings.conf:/usr/local/etc/php-fpm.d/zzz-phpSettings.conf
    ports:
        - '9000:9000'      


#mariadb/mysql
#https://docs.linuxserver.io/faq#libseccomp
  mysql:
    # image: mariadb
    image: ghcr.io/linuxserver/mariadb
    ports:
      - '3306:3306'
    volumes:     
      # - ./web3/mariadb/data/mysql:/var/lib/mysql
      - mysqldata:/var/lib/mysql # uses a docker container volume cos of perms issue - investigate using bind folder to host filesystem
    # user: mysql    
    environment:      
      MYSQL_ROOT_PASSWORD: root
      TZ: "Europe/London"      
      # MYSQL_DATABASE: demo  
      # user: mysql    
      # MYSQL_USER: user_name      
      # MYSQL_PASSWORD: user_pass    
    restart: always


  phpmyadmin:
    image: 'phpmyadmin'
    restart: always
    ports:
       - '8081:80'
    links:
        - mysql:mysql
    environment:
        MYSQL_USERNAME: root
        MYSQL_ROOT_PASSWORD: root
        PMA_HOST: mysql
        # PMA_ARBITRARY: 1

# Volumes
volumes:
  mysqldata: